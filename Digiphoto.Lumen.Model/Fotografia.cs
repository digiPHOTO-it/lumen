//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Digiphoto.Lumen.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    
    public partial class Fotografia : INotifyPropertyChanged 
    {
    	public System.Guid id { get; set; }
    	public string nomeFile { get; set; }
    	public Nullable<System.DateTime> dataOraScatto { get; set; }
		private string _didascalia;
		public string didascalia {
			get {
				return _didascalia;
			}
			set {
				if( value != _didascalia ) {
					_didascalia = value;
					OnPropertyChanged( "didascalia" );
				}
			}
		}
    	public System.DateTime dataOraAcquisizione { get; set; }
    	public int numero { get; set; }
    	public Nullable<short> faseDelGiorno { get; set; }
    	public System.DateTime giornata { get; set; }
    	public string correzioniXml { get; set; }
		private short _contaStampata;
		public short contaStampata {
			get {
				return _contaStampata;
			}
			set {
				if( value != _contaStampata ) {
					_contaStampata = value;
					OnPropertyChanged( "contaStampata" );
				}
			}
		}
    	public short contaMasterizzata { get; set; }
    	public Nullable<System.Guid> evento_id { get; set; }
    	public string fotografo_id { get; set; }
    
        public virtual Evento evento { get; set; }
        public virtual Fotografo fotografo { get; set; }
    
    	#region INotifyPropertyChanged
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
    	{
    		OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
    	}
    
    	protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
    	{
    		if (PropertyChanged != null)
    			PropertyChanged(this, e);
    	}
    	#endregion INotifyPropertyChanged	
    }
}
