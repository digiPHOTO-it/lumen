<Window x:Class="Digiphoto.Lumen.OnRide.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns:oc="clr-namespace:Digiphoto.Lumen.OnRide.UI.Config"
        mc:Ignorable="d"
        Title="OnRide manager" Height="825" Width="1100" WindowState="Maximized" >

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction  Command="{Binding CloseCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Window.Resources>
		<ResourceDictionary Source="MainWindowResources.xaml" />
	</Window.Resources>

	<DockPanel LastChildFill="True">

		<Expander DockPanel.Dock="Top" Header="preferenze">
			<Grid Height="180">
				<Label Content="Cartella input foto"  Margin="10,8,0,0" 
					   VerticalAlignment="Top" HorizontalAlignment="Left"   />
				<TextBox FontSize="18" Text="{Binding Path=cartellaOnRide,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
						 ToolTip="Cartella dove arrivano le foto della fotocamera"
						 VerticalAlignment="Top" Margin="143,10,0,0" HorizontalAlignment="Left" Width="225" />
				<Button Visibility="Hidden"  Command="{Binding scegliereCartellaCommand}" CommandParameter="foto" Content="..." Height="Auto" Margin="0,11,449,0" ToolTip="Sfoglia cartelle" VerticalAlignment="Top" HorizontalAlignment="Right" Width="22" />
				<Label Content="Fotografo"  Margin="505,10,0,0" 
					   VerticalAlignment="Top" HorizontalAlignment="Left"   />
				<TextBox FontSize="18" Text="{Binding Path=userConfigOnRide.idFotografo,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
						 ToolTip="Indicare l'IDentificativo del Fotografo virtuale a cui attribuire le foto" Margin="580,10,0,0" Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" />

				<Label Content="Stato monitoraggio" Margin="0,18,91,0" Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="120"  />

				<ToggleButton IsChecked="{Binding Path=isRunning, Mode=OneWay}" 
						  Content="Start/Stop"  ToolTip="Avvia o Arresta il monitoriaggio della cartella" Margin="0,0,19,126" Height="45" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="72" >
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Checked">
							<i:InvokeCommandAction Command="{Binding Path=cambiareStatoCommand}" CommandParameter="start"/>
						</i:EventTrigger>
						<i:EventTrigger EventName="Unchecked">
							<i:InvokeCommandAction Command="{Binding Path=cambiareStatoCommand}" CommandParameter="stop"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
					<ToggleButton.Style>
						<Style TargetType="ToggleButton">
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=isRunning, Mode=OneWay}" Value="True" >
									<Setter Property="Background" Value="Green" />
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=isRunning, Mode=OneWay}" Value="False" >
									<Setter Property="Background" Value="Red" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</ToggleButton.Style>
				</ToggleButton>


				<GroupBox BorderThickness="2" Margin="10,42,0,0" HorizontalAlignment="Left" Width="490" Height="123" VerticalAlignment="Top" >
					<GroupBox.Header>
						<CheckBox Content="Maschera"  IsChecked="{Binding isMascheraAttiva,Mode=TwoWay}" />
					</GroupBox.Header>

					<Grid  IsEnabled="{Binding isMascheraAttiva}">
						<TextBox FontSize="12" IsReadOnly="True" Text="{Binding Path=maschera.nomeFile,Mode=OneWay}" VerticalAlignment="Top" 
						 Margin="78,41,0,0" Height="25" HorizontalAlignment="Left" Width="277" />

						<Border BorderThickness="1" BorderBrush="#FF000000" Height="102" Width="102"  VerticalAlignment="Top" Margin="370,1,0,-47" HorizontalAlignment="Left">
							<Image HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
								   Source="{Binding bytesProvinoMaschera}" />
						</Border>
						<Button Content="..." ToolTip="Seleziona maschera" 
								HorizontalAlignment="Left" Margin="21,41,0,0" VerticalAlignment="Top" Width="31" Height="26"
								Name="cambiareMascheraButton" Click="cambiareMascheraButton_Click" />
					</Grid>
				</GroupBox>

				<GroupBox Margin="505,49,0,0" HorizontalAlignment="Left" Width="152" Height="116" VerticalAlignment="Top" Header="Running Mode" >
					<StackPanel Orientation="Vertical" Margin="0,10,0,0" >
						<RadioButton Content="Presidiato" Height="30" FontSize="20" ToolTip="E' presente un operatore che abbina i barcode"
									 IsChecked="{Binding Path=userConfigOnRide.runningMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static oc:RunningMode.Presidiato}}" />
						<RadioButton Content="Abbandonato" Height="30" FontSize="20" ToolTip="Non vengono abbinati i barcode"
									 IsChecked="{Binding Path=userConfigOnRide.runningMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static oc:RunningMode.Automatico}}" />



					</StackPanel>
				</GroupBox>

				<Label Content="Orario cambio&#x0a;mattino/pomeriggio" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="661,88,0,0" Height="46" Width="119" ToolTip="formato HH:MM&#x0a;Prima è mattino&#x0a;Dopo è pomeriggio" />
				<TextBox Text="{Binding Path=userConfigOnRide.orarioSeparaMatPom}" Height="26" VerticalAlignment="Top" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Width="110" Margin="661,139,0,0" FontSize="18" />

				<GroupBox BorderBrush="Blue" Margin="805,59,0,0" HorizontalAlignment="Left" Width="174" >
					<GroupBox.Header >
						<CheckBox Content="Usa scanner impronte" Name="chkScannerAbilitato"
								  IsChecked="{Binding Path=userConfigOnRide.scannerImpronteGestito}"  >
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Checked">
									<i:InvokeCommandAction Command="{Binding Path=refreshScannerCommand}" CommandParameter="start"/>
								</i:EventTrigger>
								<i:EventTrigger EventName="Unchecked">
									<i:InvokeCommandAction Command="{Binding Path=refreshScannerCommand}" CommandParameter="stop"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</CheckBox>
					</GroupBox.Header>
					<Grid IsEnabled="{Binding Path=userConfigOnRide.scannerImpronteGestito}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Label Grid.Row="0" Grid.Column="0" Content="Modello" />
						<Label Grid.Row="0" Grid.Column="1" Content="{Binding scannerImpronteNome, Mode=OneTime}" />
						<StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">
							<Label  Content="Presente" />
							<Button ToolTip="Scanner refresh" Command="{Binding Path=refreshScannerCommand}" >
								<Image Source="/Digiphoto.Lumen.OnRide.UI;component/Resources/refresh-16x16.png" Width="16" Height="16" />
							</Button>
						</StackPanel>
						<Label Grid.Row="1" Grid.Column="1" Content="{Binding scannerImprontePresente}" >
							<Label.Style>
								<Style TargetType="Label">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=scannerImprontePresente, Mode=OneWay}" Value="True" >
											<Setter Property="Background" Value="LightGreen" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=scannerImprontePresente, Mode=OneWay}" Value="False" >
											<Setter Property="Background" Value="Red" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Label.Style>

						</Label>
						
						<Label Grid.Row="2" Grid.Column="0" Content="Min sec." ToolTip="Minimo N° secondi discesa" />
						<extToolkit:IntegerUpDown Grid.Row="2" Grid.Column="1" 
												  ToolTip="N° minimo di secondi impiegati per la discesa" 
												  Value="{Binding Path=userConfigOnRide.secDiscesaMin,Mode=TwoWay}" />

						<Label Grid.Row="3" Grid.Column="0" Content="Max sec." ToolTip="Massimo N° secondi discesa" />
						<extToolkit:IntegerUpDown Grid.Row="3" Grid.Column="1" 
												  ToolTip="N° massimo di secondi impiegati per la discesa" 
												  Value="{Binding Path=userConfigOnRide.secDiscesaMax,Mode=TwoWay}" />
						
					</Grid>
					
					<!-- IsEnabled="{Binding scannerImprontePresente}" -->
				</GroupBox>



			</Grid>




		</Expander>

		<ToolBar DockPanel.Dock="Top"
				 IsEnabled="{Binding Path=userConfigOnRide.runningMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static oc:RunningMode.Presidiato}}" >

			<Button  Height="36" Padding="4 0 4 0" Content="Esegui !" Command="{Binding acquisireFotoCommand}" Style="{StaticResource pulsanteStyle}" ToolTip="Applica le modifiche impostate" />
			<Separator Margin="6 0 6 0"/>
			<Button  Content="Refresh" Command="{Binding caricareItemsCommand}" Style="{StaticResource pulsanteStyle}" ToolTip="Aggiorna la lista delle foto a video"/>
			<Separator Margin="6 0 6 0"/>

		</ToolBar>

		<StatusBar DockPanel.Dock="Bottom">
			<Label Content="{Binding Path=ciao}" />
		</StatusBar>

		<Grid DockPanel.Dock="Left" 
			  IsEnabled="{Binding Path=userConfigOnRide.runningMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static oc:RunningMode.Presidiato}}" >

			<ListView x:Name="onrideListView"
					  SelectionMode="Single" IsSynchronizedWithCurrentItem="True"
					  ItemsSource="{Binding Path=fotoItemsCW}">

				<ListView.View>
					<GridView>
						<GridView.ColumnHeaderContainerStyle>
							<Style TargetType="{x:Type GridViewColumnHeader}">
								<Setter Property="Visibility" Value="Visible" />
							</Style>
						</GridView.ColumnHeaderContainerStyle>
						<GridViewColumn Header="Foto">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Image Height="50" Width="50">
										<Image.Source>
											<BitmapImage UriSource="{Binding Path=fileInfo.FullName}" DecodePixelWidth="50" CacheOption="OnLoad" />
										</Image.Source>
									</Image>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>


						<GridViewColumn Width="70">
							<GridViewColumn.Header>
								<StackPanel Orientation="Horizontal">
									<CheckBox Name="boxHeaderTaggare" Click="boxHeaderTaggare_Click" />
									<TextBlock Text="Taggare" ToolTip="Se da taggare, inserire il tag" />
								</StackPanel>
							</GridViewColumn.Header>


							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<CheckBox IsChecked="{Binding Path=daTaggare}"  >
										<CheckBox.LayoutTransform>
											<ScaleTransform ScaleX="2" ScaleY="2" />
										</CheckBox.LayoutTransform>
									</CheckBox>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>

						<GridViewColumn Header="Tag">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<TextBox Text="{Binding Path=tag}" Width="200" FontSize="34" Height="50" 
											 IsEnabled="{Binding Path=daTaggare, UpdateSourceTrigger=PropertyChanged}" 
											 CharacterCasing="Upper" GotFocus="TagTextBox_GotFocus"
											 />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>

						<GridViewColumn Width="70">
							<GridViewColumn.Header>
								<StackPanel Orientation="Horizontal">
									<CheckBox Name="boxHeaderEliminare" Click="boxHeaderEliminare_Click" />
									<TextBlock Text="Eliminare" ToolTip="Le foto contrassegnate saranno distrutte per sempre" />
								</StackPanel>
							</GridViewColumn.Header>

							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<CheckBox IsChecked="{Binding Path=daEliminare}" >
										<CheckBox.LayoutTransform>
											<ScaleTransform ScaleX="2" ScaleY="2" />
										</CheckBox.LayoutTransform>
									</CheckBox>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>

					</GridView>
				</ListView.View>
			</ListView>

		</Grid>

		<Grid DockPanel.Dock="Top">
			<StackPanel Orientation="Horizontal">
				<Image Source="{Binding Path=userConfigOnRide.runningMode, ConverterParameter=icon, Converter={StaticResource runningModeConverter}}" Width="32" Height="32" />
				<Label Content="Conta foto processate: " FontSize="18" />
				<Label Content="{Binding Path=totFotoAcquisite}" MinWidth="50" FontSize="18" Background="LightGreen" HorizontalContentAlignment="Center" />
				<Label Content="Conta impronte processate: " FontSize="18" />
				<Label Content="{Binding Path=totImpronteAcquisite}" MinWidth="50" FontSize="18" Background="LightGreen" HorizontalContentAlignment="Center" />
				<!--
				  ** Il vedere l'immagine dell'impronta digitale non è molto utile.
				<Image Height="36" Width="36" Source="{Binding fileNameBmpImpronta, Converter={StaticResource pathToIMageConverter}}" />
				-->
				<Label Content="{Binding Path=personeSconosciute.Count}" ContentStringFormat="Impronte da associare: {0}" Background="Cyan" MinWidth="50" FontSize="18" HorizontalContentAlignment="Center" />
			</StackPanel>
		</Grid>

		<Grid >
			<Image Source="{Binding ElementName=onrideListView, Path=SelectedItem.fileInfo.FullName, Converter={StaticResource uriToCachedImageConverter} }" 
				   IsEnabled="{Binding Path=userConfigOnRide.runningMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static oc:RunningMode.Presidiato}}" 
				   />
		</Grid>

	</DockPanel>
</Window>
