//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Digiphoto.Lumen.UI.FingerprintServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FingerprintServiceReference.IFingerprintService")]
    public interface IFingerprintService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintService/About", ReplyAction="http://tempuri.org/IFingerprintService/AboutResponse")]
        string About();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintService/About", ReplyAction="http://tempuri.org/IFingerprintService/AboutResponse")]
        System.Threading.Tasks.Task<string> AboutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintService/IdentificaOrAggiungi", ReplyAction="http://tempuri.org/IFingerprintService/IdentificaOrAggiungiResponse")]
        string IdentificaOrAggiungi(string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintService/IdentificaOrAggiungi", ReplyAction="http://tempuri.org/IFingerprintService/IdentificaOrAggiungiResponse")]
        System.Threading.Tasks.Task<string> IdentificaOrAggiungiAsync(string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintService/Identifica", ReplyAction="http://tempuri.org/IFingerprintService/IdentificaResponse")]
        string Identifica(string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintService/Identifica", ReplyAction="http://tempuri.org/IFingerprintService/IdentificaResponse")]
        System.Threading.Tasks.Task<string> IdentificaAsync(string template);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFingerprintServiceChannel : Digiphoto.Lumen.UI.FingerprintServiceReference.IFingerprintService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FingerprintServiceClient : System.ServiceModel.ClientBase<Digiphoto.Lumen.UI.FingerprintServiceReference.IFingerprintService>, Digiphoto.Lumen.UI.FingerprintServiceReference.IFingerprintService {
        
        public FingerprintServiceClient() {
        }
        
        public FingerprintServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FingerprintServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FingerprintServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FingerprintServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string About() {
            return base.Channel.About();
        }
        
        public System.Threading.Tasks.Task<string> AboutAsync() {
            return base.Channel.AboutAsync();
        }
        
        public string IdentificaOrAggiungi(string template) {
            return base.Channel.IdentificaOrAggiungi(template);
        }
        
        public System.Threading.Tasks.Task<string> IdentificaOrAggiungiAsync(string template) {
            return base.Channel.IdentificaOrAggiungiAsync(template);
        }
        
        public string Identifica(string template) {
            return base.Channel.Identifica(template);
        }
        
        public System.Threading.Tasks.Task<string> IdentificaAsync(string template) {
            return base.Channel.IdentificaAsync(template);
        }
    }
}
