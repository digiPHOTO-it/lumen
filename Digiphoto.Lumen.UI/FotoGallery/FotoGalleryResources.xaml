<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lumC="clr-namespace:Digiphoto.Lumen.UI.Converters"
                    xmlns:lumD="clr-namespace:Digiphoto.Lumen.UI.Diapo">

	<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Digiphoto.Lumen.UI;component/Resources/GlobalResourceDictionary.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Digiphoto.Lumen.UI;component/SelettoreAzioniRapide/SelettoreAzioniRapideResources.xaml" />
    </ResourceDictionary.MergedDictionaries>


	<lumC:ListVisibilityConverter x:Key="listVisibilityConverter" />
	<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
	<lumC:ProgressToVisibilityConverter x:Key="progressToVisibilityConverter" />

	<Style x:Key="imageButtonToolBarStyle" TargetType="Button">
		<Setter Property="MinWidth" Value="48" />
		<Setter Property="Margin" Value="0,1,0,0" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="DarkGray" />
				<Setter Property="Opacity" Value="0.3" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="True">
				<Setter Property="Background" Value="White" />
				<Setter Property="BorderBrush" Value="Orange" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="bottoneNellaToolbarStyle" BasedOn="{StaticResource buttonBaseStyle}" TargetType="Control">
		<Setter Property="Width" Value="48" />
	</Style>

	<!-- Stile della listbox che itera le immagini -->
    <Style x:Key="LsImageGalleryStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
		<Setter Property="Background" Value="#4c4c4c" />
			 
		<Setter Property="ItemContainerStyle" Value="{DynamicResource ImageGalleryImageContainerStyle}" />
		
	</Style>

    <Style x:Key="textBoxNumFotogrammi" TargetType="TextBox">
        <Setter Property="MinWidth" Value="100" />
    </Style>
 

    <!-- Template per il pannello che contiene tutti gli elementi della lista -->
    <ItemsPanelTemplate x:Key="ImageGalleryItemsPanelTemplate">

        <!-- Display Images on UniformGrid Panel 
        <UniformGrid Columns="4" HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
        -->

        <!-- il wrappanel mi consente di sistemare al meglio le foto in funzione dello spazio disponibile ed andare a capo quando serve -->
        <WrapPanel Orientation="Horizontal" />

    </ItemsPanelTemplate>

    
    
    <!--
      ** I pulsanti di stampa, siccome sono tutti uguali,
      ** devo distinguerli con una scritta.
      ** Quindi creo un pulsante che ha una didascalia sotto.
    -->
    <DataTemplate x:Key="pulsanteDiStampaTemplate">
        <Button ToolTip="{Binding}" 
                Command="{Binding Path=DataContext.stampareCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                CommandParameter="{Binding}"
				Style="{StaticResource imageButtonToolBarStyle}"
				>
			<Button.InputBindings>
				<MouseBinding Gesture="Control+LeftClick" 
				              Command="{Binding Path=DataContext.stampareDirettaCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
							  CommandParameter="{Binding}"
							  />
			</Button.InputBindings>
			<StackPanel Orientation="Vertical" >
                <Image Source="/Digiphoto.Lumen.UI;component/Resources/Printer-48x48.png" Width="48" />
                <Label Content="{Binding FormatoCarta.descrizione}" Width="48" HorizontalContentAlignment="Center" Foreground="Black"  />
            </StackPanel>
        </Button>
    </DataTemplate>

	<Style x:Key="toolBarTrayAzioniSx" TargetType="{x:Type ToolBarTray}">
		<Setter Property="Background" Value="Yellow" />
		<Style.Resources>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBaseStyle}">
				<Setter Property="Background" Value="Tomato" />
			</Style>
		</Style.Resources>
	</Style>




	<Style x:Key="buttonCercaStyle" TargetType="Button">
		<Setter Property="Height" Value="44" />
		<Setter Property="Content">
			<Setter.Value>
				<StackPanel Orientation="Horizontal" >
					<Image Source="/Digiphoto.Lumen.UI;component/Resources/start-search-24x24.png" Height="24" />
					<Label Content="ESEGUI RICERCA" Foreground="DarkBlue" />
				</StackPanel>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="buttonAzzeraParametriStyle" TargetType="Button">
		<Setter Property="Content">
			<Setter.Value>
				<StackPanel Orientation="Horizontal">
					<Image Source="/Digiphoto.Lumen.UI;component/Resources/clear-filter-22x22.png" Height="22" />
					<Label Content="Svuota Filtri" Foreground="DarkBlue" />
				</StackPanel>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="muoviPageStyle" TargetType="Button">
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="30" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="buttonMuoviFirstPageStyle" TargetType="Button" BasedOn="{StaticResource muoviPageStyle}">
		<Setter Property="ToolTip" Value="Vai alla prima pagina di risultati" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/move-first-page-24x24.png" Height="24" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="buttonMuoviPreviousPageStyle" TargetType="Button" BasedOn="{StaticResource muoviPageStyle}">
		<Setter Property="ToolTip" Value="Vai alla pagina precedente di risultati" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/move-previous-page-24x24.png" Height="24" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="buttonMuoviNextPageStyle" TargetType="Button" BasedOn="{StaticResource muoviPageStyle}">
		<Setter Property="ToolTip" Value="Vai alla pagina precedente di risultati" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/move-next-page-24x24.png" Height="24" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ssPauseStyle" TargetType="Button">
		<Setter Property="ToolTip" Value="Pause Slide Show" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/ssPause-32x32.png" Width="32"/>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.4" />
			</Trigger>
		</Style.Triggers>
	</Style>


	
	<Style x:Key="styleSelettoreMetadati" TargetType="UserControl">
		<Setter Property="MaxHeight" Value="140" />
<!--  TODO Purtroppo non funziona. Non riconosce la property IsEnabled e non capisco perché		
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.4" />
				<Setter Property="Background" Value="Orange" />
			</Trigger>
		</Style.Triggers>
-->		
	</Style>

	<Style x:Key="idrataProgressBarStyle" TargetType="{x:Type ProgressBar}">
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ProgressBar">
					<Border BorderBrush="#D9DCE1" BorderThickness="1" Background="#E8E8E8" CornerRadius="0" Padding="0">
						<Grid x:Name="PART_Track">
							<Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="#FF49A3E1" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="tbuttonSSPlayPauseStyle" TargetType="ToggleButton">
		<Setter Property="Content">
			<Setter.Value>
				<Image Width="32" Height="32" >
					<Image.Style>
						<Style TargetType="{x:Type Image}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ElementName=togglePlayPauseSlideShow, Path=IsChecked}" Value="true">
									<Setter Property="Source" Value="/Digiphoto.Lumen.UI;component/Resources/ssPause-32x32.png"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=togglePlayPauseSlideShow, Path=IsChecked}" Value="false">
									<Setter Property="Source" Value="/Digiphoto.Lumen.UI;component/Resources/ssPlay-32x32.png"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=togglePlayPauseSlideShow, Path=IsEnabled}" Value="false">
									<Setter Property="Opacity" Value="0.3"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Image.Style>
				</Image>
			</Setter.Value>
		</Setter>	
	</Style>

	<Style x:Key="fgToolBarTrayStyle" TargetType="ToolBarTray">
		<Setter Property="Background" Value="Silver" />
	</Style>

	<Style x:Key="fgToolBarStyle" TargetType="ToolBar">
		<Setter Property="Foreground" Value="Black" />
	</Style>


	<Style x:Key="ssStartStyle" TargetType="Button" BasedOn="{StaticResource imageButtonToolBarStyle}">
		<Setter Property="ToolTip" Value="Start Slide Show" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/ssPlay-32x32.png" Width="32" />
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.3" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ssSnapshotStyle" TargetType="Button" BasedOn="{StaticResource imageButtonToolBarStyle}">
		<Setter Property="ToolTip" Value="Foto dello schermo su finestra pubblica" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/ssSnapshot-32x32.png" Width="32"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="tbVaiNumStyle" TargetType="TextBox">
		<Setter Property="Width" Value="48" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Cyan" />
	</Style>

	<Style x:Key="bottoneTestualeStyle" BasedOn="{StaticResource buttonBaseStyle}" TargetType="Control">
		<Setter Property="MinWidth" Value="48" />
		<Setter Property="Margin" Value="0,1,0,0" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="DarkGray" />
				<Setter Property="Opacity" Value="0.3" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="True">
				<Setter Property="BorderBrush" Value="Orange" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<RoutedUICommand x:Key="cmdTakeSnapshotPubblico1" />
	<RoutedUICommand x:Key="cmdCloseSnapshotPubblico" />
	<RoutedUICommand x:Key="uicmdSelezionaTutteLeFoto" />
	<RoutedUICommand x:Key="uicmdDeselezionaTutteLeFoto" />
	<RoutedUICommand x:Key="cmdGoToCurrentFotoSS" />

</ResourceDictionary> 