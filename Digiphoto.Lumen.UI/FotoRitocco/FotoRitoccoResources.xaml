<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:lumC="clr-namespace:Digiphoto.Lumen.UI.Converters"
                    xmlns:eff="clr-namespace:Digiphoto.Lumen.Windows.Media.Effects;assembly=Digiphoto.Lumen.Imaging.Wic"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Digiphoto.Lumen.UI;component/Resources/GlobalResourceDictionary.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Digiphoto.Lumen.UI;component/SelettoreAzioniRapide/SelettoreAzioniRapideResources.xaml" />
	</ResourceDictionary.MergedDictionaries>


	<lumC:ImageSourceConverter      x:Key="imageSourceConverter" />
    <lumC:BoolInverterConverter     x:Key="boolInverterConverter" />
	<lumC:PercentualeConverter      x:Key="percentualeConverter" />
    <lumC:MathConverter             x:Key="mathConverter" />
    <BooleanToVisibilityConverter   x:Key="booleanToVisibilityConverter"/>

    <!-- Stile della listbox che itera le immagini -->
    <Style x:Key="listBoxImmaginiDaModificareStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
<!--
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />

        <Setter Property="ItemContainerStyle" Value="{DynamicResource ImmaginiDaModificareContainerStyle}" />

        <Setter Property="BorderBrush" Value="Blue" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="60" />
-->	

	</Style>

    <!-- Style per ogni elemento della collection. Setto il colore selezionato  -->
    <Style x:Key="ImmaginiDaModificareContainerStyle" TargetType="ListBoxItem">
        <Style.Resources>
        </Style.Resources>
    </Style>

    <!-- Template per visualizzare ogni elemento della lista. In pratica ogni entità "Fotografia" -->

    <DataTemplate x:Key="immaginiDaModificareDataTemplate">

            <Border BorderBrush="WhiteSmoke" BorderThickness="1" 
                    CornerRadius="8" Margin="0,0,2,2" >

				<Canvas x:Name="fotoCanvas" Width="140" Height="140">

					<!-- Questa è l'immagine vera con la foto -->
					<Image Source="{Binding Path=imgProvino,Converter={StaticResource imageSourceConverter}}" 
						   Stretch="Uniform"  
						   x:Name="imageFotografia"
						   Width="{Binding ActualWidth, ElementName=fotoCanvas}"
						   Height="{Binding ActualHeight, ElementName=fotoCanvas}" />

				<Border HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource styleBorderCopriA}" />
				<Border HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource styleBorderCopriB}" />

				<Image 
						Source="/Digiphoto.Lumen.UI;component/Resources/info-16x16.png" Width="16" Height="16"
						Canvas.Left="2"
						Canvas.Bottom="2" >

						<Image.ToolTip>
							<TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Num = {0}&#x0a;Gio =  {1:dd/MM/yy}&#x0a;Ope = {2}&#x0a;- - - - -&#x0a;Fas = {3}&#x0a;Did = {4}&#x0a;Eve = {5}">
                                    <Binding Path="numero" />
                                    <Binding Path="giornata" />
                                    <Binding Path="fotografo.id" />
                                    <Binding Path="faseDelGiornoString" />
                                    <Binding Path="didascalia" />
                                    <Binding Path="evento.descrizione" FallbackValue="" />
                                </MultiBinding>
                            </TextBlock.Text>
							</TextBlock>
						</Image.ToolTip>
					</Image>


					<!-- IL font con cui stampo il numero, ha grandezza proporzionale al canvas . Per ora uso 8% della grandezza del contenitore della foto -->
					<Label Content="{Binding Path=etichetta}"        
                               Canvas.Right="2"
                               Canvas.Top="2"
                               FontSize="{Binding Converter={StaticResource percentualeConverter},FallbackValue=14,ElementName=fotoCanvas,Path=ActualHeight,ConverterParameter=8}"
                               Background="Orange" />

				</Canvas>
				
            </Border>

    </DataTemplate>


    <!-- Template per il pannello che contiene tutti gli elementi della lista -->
    <ItemsPanelTemplate x:Key="immaginiDaModificareItemsPanelTemplate">
        <!-- non ho capito perché ma se non fisso la dimensione, quando scorro le foto mi fa l'effetto elastico (strano perché le foto dovrebbero essere tutte uguali). Ma tant'è. -->
        <UniformGrid Width="290" Columns="2"  />
    </ItemsPanelTemplate>

    
    <!-- 
         MASCHERE 
    -->
    
    <ItemsPanelTemplate x:Key="itemsPanelTemplateMaschere">
		<UniformGrid  Columns="3" Height="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
	</ItemsPanelTemplate>

    <DataTemplate x:Key="itemTemplateThumbMaschera">

        <Image Height="80"  Width="80" Name="thumbMaschera" Source="{Binding}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseUp">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.attivareMascheraCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
<!--            
            <Image.ToolTip>
                <Label Content="{Binding Name}" />
            </Image.ToolTip>
-->
        </Image>

    </DataTemplate>

	<Style x:Key="panelLeveRitoccoStyle" TargetType="Panel" BasedOn="{StaticResource globalPanelGradientStyle}">
		<Setter Property="Width" Value="200" />
		
		<Style.Resources>
			<!-- non so perché ma i Button non prendono l'impostazione globale, la devo ribadire -->
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBaseStyle}">
				<Setter Property="FontSize" Value="16" />
			</Style>
		</Style.Resources>
		
	</Style>

	<Style x:Key="gridOneShotRitoccoStyle" TargetType="UniformGrid" BasedOn="{StaticResource {x:Type Panel}}">
		
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="2,14,2,2" />
		<Style.Resources>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBaseStyle}">
				<Setter Property="Height" Value="30" />
			</Style>
		</Style.Resources>		
	</Style>





    <Style x:Key="radioFiltroMask" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Setter Property="Margin" Value="5" />
		<Setter Property="Height" Value="30" />
 	</Style>
	
	<ContextMenu x:Key="contextMenuImageFotina">
		<MenuItem Header="Porta in primo piano" x:Name="menuItemBringToFront" />
        <MenuItem Header="Rimuovi da questa composizione" x:Name="menuItemRemoveFromComposition" />
    </ContextMenu>

    <Style x:Key="styleSlidersDominanti" TargetType="{x:Type Slider}">
        <Setter Property="TickFrequency" Value="0.1" />
        <Setter Property="TickPlacement" Value="TopLeft" />
    </Style>

    <Style x:Key="styleSliderDominanteRed" TargetType="{x:Type Slider}" BasedOn="{StaticResource styleSlidersDominanti}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Offset="0" Color="Cyan"  />     
                    <!--- Questi sono i centrali con trasparenza -->
                    <GradientStop Offset="0.3" Color="DarkGray" />  <!-- WhiteSmoke Trasparenza CC -->
                    <GradientStop Offset="0.5" Color="WhiteSmoke" />  <!-- White trasparenza CC -->
                    <GradientStop Offset="0.7" Color="DarkGray" />  <!-- WhiteSmoke Trasparenza CC -->
                    <GradientStop Offset="1" Color="Red" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="styleSliderDominanteGreen" TargetType="{x:Type Slider}" BasedOn="{StaticResource styleSlidersDominanti}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Offset="0" Color="Magenta"  />
                    <GradientStop Offset="0.3" Color="DarkGray" />  <!-- WhiteSmoke Trasparenza CC -->
                    <GradientStop Offset="0.5" Color="WhiteSmoke" />  <!-- White trasparenza CC -->
                    <GradientStop Offset="0.7" Color="DarkGray" />  <!-- WhiteSmoke Trasparenza CC -->
                    <GradientStop Offset="1" Color="Green" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="styleSliderDominanteBlue" TargetType="{x:Type Slider}" BasedOn="{StaticResource styleSlidersDominanti}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Offset="0" Color="Yellow"  />
                    <GradientStop Offset="0.3" Color="DarkGray" />  <!-- WhiteSmoke Trasparenza CC -->
                    <GradientStop Offset="0.5" Color="WhiteSmoke" />  <!-- White trasparenza CC -->
                    <GradientStop Offset="0.7" Color="DarkGray" />  <!-- WhiteSmoke Trasparenza CC -->
                    <GradientStop Offset="1" Color="Blue" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Questo è il template per visualizzare le tante foto in modifica durante il fotoritocco -->

    <!--                   
        LayoutTransform="{Binding Path=DataContext.trasformazioneCorrente, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  
    -->
    <DataTemplate x:Key="dataTemplateFotoInModificaMassivo">
        <Border BorderBrush="Red">
            <Image Name="imageModTemplate"
                   Effect="{Binding Path=DataContext.effettoCorrente, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                   Source="{Binding Path=imgProvino,Converter={StaticResource imageSourceConverter}}" />
        </Border>
    </DataTemplate>

	<!-- Stile per bottoni di reset sliders -->
	<Style x:Key="stileBottoniResetSliders" TargetType="Button">
		<Setter Property="Width" Value="20" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="0" />
	</Style>
    
	<Style x:Key="stileIconaBottoniSliders" TargetType="Image">
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Margin" Value="0" />
	</Style>

	<RoutedUICommand x:Key="cmdTakeSnapshotPubblico2" />
	<RoutedUICommand x:Key="cmdCloseSnapshotPubblico" />
	<RoutedUICommand x:Key="cmdGoToCurrentFotoSS" />

	

</ResourceDictionary>