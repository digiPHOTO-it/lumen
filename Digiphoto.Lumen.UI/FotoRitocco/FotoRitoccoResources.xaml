<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:lumC="clr-namespace:Digiphoto.Lumen.UI.Converters"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Resources/GlobalResourceDictionary.xaml" />
		<ResourceDictionary Source="/SelettoreAzioniRapide/SelettoreAzioniRapideResources.xaml" />
	</ResourceDictionary.MergedDictionaries>


	<lumC:ImageSourceConverter x:Key="imageSourceConverter" />
    <lumC:BoolInverterConverter x:Key="boolInverterConverter" />
	<lumC:PercentualeConverter x:Key="percentualeConverter" />
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>

    <!-- Stile della listbox che itera le immagini -->
    <Style x:Key="listBoxImmaginiDaModificareStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
<!--
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />

        <Setter Property="ItemContainerStyle" Value="{DynamicResource ImmaginiDaModificareContainerStyle}" />

        <Setter Property="BorderBrush" Value="Blue" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="60" />
-->	

	</Style>

    <!-- Style per ogni elemento della collection. Setto il colore selezionato  -->
    <Style x:Key="ImmaginiDaModificareContainerStyle" TargetType="ListBoxItem">
        <Style.Resources>
        </Style.Resources>
    </Style>

    <!-- Template per visualizzare ogni elemento della lista. In pratica ogni entità "Fotografia" -->

    <DataTemplate x:Key="immaginiDaModificareDataTemplate">

        <Grid>

            <Border BorderBrush="WhiteSmoke" BorderThickness="1" 
                    CornerRadius="10" Margin="0,0,2,2" >

				<Canvas x:Name="imgCanvas" Width="100" Height="100">

					<Canvas.Background>
						<ImageBrush ImageSource="{Binding Path=imgProvino,Converter={StaticResource imageSourceConverter}}" 
							x:Name="imageMod" 
							Stretch="Uniform" />
					</Canvas.Background>
					
					<Image 
						Source="/Digiphoto.Lumen.UI;component/Resources/info-16x16.png" Width="16" Height="16"
						Canvas.Left="2"
						Canvas.Bottom="2" >

						<Image.ToolTip>
							<TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Num = {0}&#x0a;Gio =  {1:dd/MM/yy}&#x0a;Ope = {2}&#x0a;- - - - -&#x0a;Fas = {3}&#x0a;Did = {4}&#x0a;Eve = {5}">
                                    <Binding Path="numero" />
                                    <Binding Path="giornata" />
                                    <Binding Path="fotografo.id" />
                                    <Binding Path="faseDelGiornoString" />
                                    <Binding Path="didascalia" />
                                    <Binding Path="evento.descrizione" FallbackValue="" />
                                </MultiBinding>
                            </TextBlock.Text>
							</TextBlock>
						</Image.ToolTip>
					</Image>


					<!-- IL font con cui stampo il numero, ha grandezza proporzionale al canvas . Per ora uso 8% della grandezza del contenitore della foto -->
					<Label Content="{Binding Path=etichetta}"        
                               Canvas.Right="2"
                               Canvas.Bottom="2"
                               FontSize="{Binding Converter={StaticResource percentualeConverter},ElementName=imgCanvas,Path=ActualHeight,ConverterParameter=8}"
                               Background="Orange" />
				</Canvas>
				
            </Border>
        </Grid>

    </DataTemplate>


    <!-- Template per il pannello che contiene tutti gli elementi della lista -->
    <ItemsPanelTemplate x:Key="immaginiDaModificareItemsPanelTemplate">
        <!-- il wrappanel mi consente di sistemare al meglio le foto in funzione dello spazio disponibile ed andare a capo quando serve -->
        <WrapPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>

    
    <!-- 
         MASCHERE 
    -->
    
    <ItemsPanelTemplate x:Key="itemsPanelTemplateMaschere">
		<UniformGrid  Columns="3" Height="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible"/>
		<!--
		ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible"
		-->
	</ItemsPanelTemplate>

    <DataTemplate x:Key="itemTemplateThumbMaschera">

        <Image Height="80"  Width="80" Name="thumbMaschera" Source="{Binding}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseUp">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.attivareMascheraCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
<!--            
            <Image.ToolTip>
                <Label Content="{Binding Name}" />
            </Image.ToolTip>
-->
        </Image>

    </DataTemplate>

	<Style x:Key="panelLeveRitoccoStyle" TargetType="Panel" BasedOn="{StaticResource globalPanelGradientStyle}">
		<Setter Property="Width" Value="200" />
		
		<Style.Resources>
			<!-- non so perché ma i Button non prendono l'impostazione globale, la devo ribadire -->
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBaseStyle}">
				<Setter Property="FontSize" Value="16" />
			</Style>
		</Style.Resources>
		
	</Style>

	<Style x:Key="gridOneShotRitoccoStyle" TargetType="UniformGrid" BasedOn="{StaticResource {x:Type Panel}}">
		
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="2,14,2,2" />
		<Style.Resources>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBaseStyle}">
				<Setter Property="Height" Value="30" />
			</Style>
		</Style.Resources>		
	</Style>

	<Style x:Key="toggleButtonOneShotStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource buttonBaseStyle}">
		<Setter Property="Background" Value="Red" />
	</Style>

	<Style x:Key="radioFiltroMask" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Setter Property="Margin" Value="5" />
		<Setter Property="Height" Value="30" />
 	</Style>
	
	<ContextMenu x:Key="contextMenuImageFotina">
		<MenuItem Header="Bring to front" x:Name="menuItemBringToFront" />
	</ContextMenu>
	
</ResourceDictionary>