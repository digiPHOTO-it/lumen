<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
                    xmlns:lumC="clr-namespace:Digiphoto.Lumen.UI.Converters"
                    xmlns:lumD="clr-namespace:Digiphoto.Lumen.UI.Diapo">

	<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Digiphoto.Lumen.UI;component/Resources/GlobalResourceDictionary.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Digiphoto.Lumen.UI;component/SelettoreAzioniRapide/SelettoreAzioniRapideResources.xaml" />
    </ResourceDictionary.MergedDictionaries>


	<lumC:ListVisibilityConverter x:Key="listVisibilityConverter" />
	<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
	<lumC:ProgressToVisibilityConverter x:Key="progressToVisibilityConverter" />
    <lumC:ModoVenditaImageSourceConverter x:Key="modoVenditaImageSourceConverter" />
	<lumC:ModoVenditaBoolConverter x:Key="modoVenditaBoolConverter" />
    <lumC:FiltroSelezConverter x:Key="filtroSelezConverter" />

    <Style x:Key="imageButtonToolBarStyle" TargetType="ButtonBase">
		<Setter Property="MinWidth" Value="48" />
		<Setter Property="Margin" Value="0,1,0,0" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="DarkGray" />
				<Setter Property="Opacity" Value="0.3" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="True">
				<Setter Property="Background" Value="White" />
				<Setter Property="BorderBrush" Value="Orange" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="bottoneNellaToolbarStyle" BasedOn="{StaticResource buttonBaseStyle}" TargetType="Control">
		<Setter Property="Width" Value="48" />
	</Style>

	<!-- Stile della listbox che itera le immagini -->
	<Style x:Key="LsImageGalleryStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
		<Setter Property="Background" Value="#4c4c4c" />
		<Setter Property="ItemContainerStyle" Value="{DynamicResource QQQQQQQQQQQQQQQ___DACANC____ImageGalleryImageContainerStyle}" />
	</Style>
	
	<Style x:Key="textBoxNumFotogrammi" TargetType="TextBox">
		<Setter Property="MinWidth" Value="100" />
	</Style>
 
    <!-- Template per il pannello che contiene tutti gli elementi della lista -->
    <ItemsPanelTemplate x:Key="LsImageGalleryItemsPanelTemplate">

        <!-- Display Images on UniformGrid Panel -->
        <UniformGrid Rows="{Binding Path=numRighePag,Mode=TwoWay}" Columns="{Binding Path=numColonnePag,Mode=TwoWay}" />

            <!--
            <UniformGrid Rows="{Binding Path=slideShowRighe}" Columns="{Binding Path=slideShowColonne}" />
-->		
		
    </ItemsPanelTemplate>

    
    
    <!--
      ** I pulsanti di stampa, siccome sono tutti uguali,
      ** devo distinguerli con una scritta.
      ** Quindi creo un pulsante che ha una didascalia sotto.
    -->
    <DataTemplate x:Key="pulsanteDiStampaTemplate">
        <Button ToolTip="{Binding}" 
                Command="{Binding Path=DataContext.stampareCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                CommandParameter="{Binding}"
				Style="{StaticResource imageButtonToolBarStyle}"
				>
			<StackPanel Orientation="Vertical">
                <Image  Source="{Binding Path=DataContext.modoVendita, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource modoVenditaImageSourceConverter}}"/>

                <TextBlock Text="{Binding FormatoCarta.descrizione}" Foreground="Black" TextAlignment="Center" />
            </StackPanel>
        </Button>
    </DataTemplate>

	<Style x:Key="toolBarTrayAzioniSx" TargetType="{x:Type ToolBarTray}">
		<Setter Property="Background" Value="Yellow" />
		<Style.Resources>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBaseStyle}">
				<Setter Property="Background" Value="Tomato" />
			</Style>
		</Style.Resources>
	</Style>


	<Style x:Key="statusModoVenditaSwitchImage" TargetType="ToggleButton"  >
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="/Digiphoto.Lumen.UI;component/Resources/switch_off-48x48.png" />
                    </Setter.Value>
				</Setter>
				<Setter Property="ToolTip" Value="Vendita con stampa diretta" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Content">
					<Setter.Value>
						<Image Source="/Digiphoto.Lumen.UI;component/Resources/switch_on-48x48.png"/>
					</Setter.Value>
				</Setter>
				<Setter Property="ToolTip" Value="Vendita tramite carrello" />
			</Trigger>
		</Style.Triggers>
    </Style>

	<Style x:Key="buttonCercaStyle" TargetType="Button">
		<Setter Property="Height" Value="58" />
		<Setter Property="Content">
			<Setter.Value>
				<StackPanel Orientation="Horizontal" >
					<Image Source="/Digiphoto.Lumen.UI;component/Resources/start-search-24x24.png" Height="32" />
					<Label Content="ESEGUI RICERCA" Foreground="DarkBlue" />
				</StackPanel>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="buttonAzzeraParametriStyle" TargetType="Button">
		<Setter Property="Content">
			<Setter.Value>
				<StackPanel Orientation="Horizontal">
					<Image Source="/Digiphoto.Lumen.UI;component/Resources/clear-filter-22x22.png" Height="22" />
					<Label Content="Svuota Filtri" Foreground="DarkBlue" />
				</StackPanel>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="muoviPageStyle" TargetType="Button">
		<Setter Property="Width" Value="26" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="buttonMuoviFirstPageStyle" TargetType="Button" BasedOn="{StaticResource muoviPageStyle}">
		<Setter Property="ToolTip" Value="Vai alla prima pagina di risultati" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/move-first-page-24x24.png" Height="24" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="buttonMuoviPreviousPageStyle" TargetType="Button" BasedOn="{StaticResource muoviPageStyle}">
		<Setter Property="ToolTip" Value="Vai alla pagina precedente di risultati" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/move-previous-page-24x24.png" Height="24" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="buttonMuoviNextPageStyle" TargetType="Button" BasedOn="{StaticResource muoviPageStyle}">
		<Setter Property="ToolTip" Value="Vai alla pagina successiva di risultati" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/move-next-page-24x24.png" Height="24" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="buttonMuoviLastPageStyle" TargetType="Button" BasedOn="{StaticResource muoviPageStyle}">
		<Setter Property="ToolTip" Value="Vai alla ultima pagina di risultati" />
			<Setter Property="Content">
				<Setter.Value>
					<Image Source="/Digiphoto.Lumen.UI;component/Resources/move-last-page-24x24.png" Height="24" />
				</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="ssPauseStyle" TargetType="Button">
		<Setter Property="ToolTip" Value="Pause Slide Show" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/ssPause-32x32.png" Width="32"/>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.4" />
			</Trigger>
		</Style.Triggers>
	</Style>


	
	<Style x:Key="styleSelettoreMetadati" TargetType="UserControl">
		<Setter Property="MaxHeight" Value="140" />
<!--  TODO Purtroppo non funziona. Non riconosce la property IsEnabled e non capisco perché		
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.4" />
				<Setter Property="Background" Value="Orange" />
			</Trigger>
		</Style.Triggers>
-->		
	</Style>

    <Style x:Key="styleSelettoreAzioniAutomatiche" TargetType="UserControl">
        <!--  TODO Purtroppo non funziona. Non riconosce la property IsEnabled e non capisco perché		
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.4" />
				<Setter Property="Background" Value="Orange" />
			</Trigger>
		</Style.Triggers>
-->
    </Style>


    <Style x:Key="ssStartStopStyle" TargetType="ToggleButton">
		<Setter Property="Content">
			<Setter.Value>
				<Image Width="32" Height="32" >
					<Image.Style>
						<Style TargetType="{x:Type Image}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ElementName=togglePlayPauseSlideShow, Path=IsChecked}" Value="true">
									<Setter Property="Source" Value="/Digiphoto.Lumen.UI;component/Resources/ssPause-32x32.png"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=togglePlayPauseSlideShow, Path=IsChecked}" Value="false">
									<Setter Property="Source" Value="/Digiphoto.Lumen.UI;component/Resources/ssPlay-32x32.png"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=togglePlayPauseSlideShow, Path=IsEnabled}" Value="false">
									<Setter Property="Opacity" Value="0.3"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Image.Style>
				</Image>
			</Setter.Value>
		</Setter>	
	</Style>

	<Style x:Key="fgToolBarTrayStyle" TargetType="ToolBarTray">
		<Setter Property="Background" Value="Silver" />
	</Style>

	<Style x:Key="fgToolBarStyle" TargetType="ToolBar">
		<Setter Property="Foreground" Value="Black" />
	</Style>


	<Style x:Key="ssStartStyle" TargetType="Button" BasedOn="{StaticResource imageButtonToolBarStyle}">
		<Setter Property="ToolTip" Value="Start Slide Show" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/ssPlay-32x32.png" Width="32" />
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.3" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ssSnapshotStyle" TargetType="Button" BasedOn="{StaticResource imageButtonToolBarStyle}">
		<Setter Property="ToolTip" Value="Foto dello schermo su finestra pubblica" />
		<Setter Property="Content">
			<Setter.Value>
				<Image Source="/Digiphoto.Lumen.UI;component/Resources/ssSnapshot-32x32.png" Width="32"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="tbVaiNumStyle" TargetType="TextBox">
		<Setter Property="Width" Value="48" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Cyan" />

		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="GOTO_VUOTO">
				<Setter Property="FontStyle" Value="Italic" />
				<Setter Property="FontSize" Value="9" />
				<Setter Property="Text" Value="N°foto..." /> <!-- occhio che questa scritta c'è anche in FotoGallery.xaml.cs -->
				<Setter Property="Foreground" Value="LightGray" />
			</DataTrigger>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="GOTO_ERRATO">
				<Setter Property="BorderBrush" Value="Red" />
				<Setter Property="Background" Value="Orange" />
			</DataTrigger>
		</Style.Triggers>

	</Style>

	<Style x:Key="bottoneTestualeStyle" BasedOn="{StaticResource buttonBaseStyle}" TargetType="Button">
		<Setter Property="MinWidth" Value="48" />
		<Setter Property="Margin" Value="0,1,0,0" />
		<Style.Triggers>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=IsPressed}" Value="True">
				<Setter Property="BorderBrush" Value="Red" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Background" Value="Yellow" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="False">
                <Setter Property="Background" Value="DarkGray" />
            </DataTrigger>

		</Style.Triggers>
	</Style>


    <ControlTemplate TargetType="ToggleButton" x:Key="toggleButtonSelezTutteControlTemplate">
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                            <GradientStop Color="#F7F6BE" Offset="1"/>
                            <GradientStop Color="Yellow" Offset="0.307"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

	<Style x:Key="toggleButtonSelezTutteStyle" TargetType="ToggleButton" BasedOn="{StaticResource mioToggleButtonStyle}">
		<Setter Property="Margin" Value="1 3 1 3" />
		<Setter Property="MinWidth" Value="48" />
		<Setter Property="ToolTip" Value="Visualizza solo le foto selezionate&#10;oppure tutte le foto" />
	</Style>

	<!-- lo slider per spostare la paginazione -->
	<Style x:Key="sliderStyle" TargetType="{x:Type Slider}">

		<Setter Property="Width" Value="28" />
		<Setter Property="Background" Value="DarkBlue" />

		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1">

					<!-- This gradient stop is fully opaque. -->
					<GradientStop Color="#FF00288B" Offset="1.0" />

					<!-- This gradient stop is partially transparent. -->
					<GradientStop Color="#800091CD" Offset="0.0" />

				</LinearGradientBrush>
			</Setter.Value>
		</Setter>

		<Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<!-- 
				   la rotazione mi serve per avere i numeri piu bassi in alto e si incrementa scendendo giu verso il basso 
				   Questo è necessario per essere coerente con le frecce di spostamento UP (scende) DOWN (sale)
				-->
				<RotateTransform Angle="180" />
			</Setter.Value>
		</Setter>
		
	</Style>

	<Style x:Key="sliderTooltipPopupStyle" TargetType="Popup">

		
		<Setter Property="AllowsTransparency" Value="True" />


		<Style.Resources>
			<Style TargetType="Grid">
				<Setter Property="Background" Value="Transparent" />

				<Style.Resources>
					
					<Style TargetType="Label">
						<Setter Property="Foreground" Value="White" />
						<Setter Property="FontSize" Value="11" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>

					<Style TargetType="Border">
						<Setter Property="Margin" Value="4,20,4,4" />
						<Setter Property="CornerRadius" Value="18" />
						<Setter Property="BorderThickness" Value="1" />

						<Setter Property="Effect">
							<Setter.Value>
								<DropShadowEffect BlurRadius="5" Opacity="0.6"/>
							</Setter.Value>
						</Setter>

						<Setter Property="Background">
							<Setter.Value>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
									<GradientStop Color="#003333" Offset="0"/>
									<GradientStop Color="#05c1ff" Offset="0.5"/>
									<GradientStop Color="#003333" Offset="1"/>
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>


						<Style.Resources>
							<Style TargetType="TextBlock"> <!-- contiene il numero del fotogramma -->
								<Setter Property="FontSize" Value="100" />
								<Setter Property="MinWidth" Value="340" />
								<Setter Property="TextAlignment" Value="Center" />
								<Setter Property="Foreground" Value="White" />
							</Style>
						</Style.Resources>
					</Style>
				</Style.Resources>
			</Style>
		</Style.Resources>
	</Style>


<!--
	<Style x:Key="sliderStyle1" TargetType="{x:Type Slider}">
		<Setter Property="Height" Value="32" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border>
						<Grid ShowGridLines="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Border x:Name="TrackBackground" Height="34" Background="Chocolate" Grid.Row="1"/>

							<Track x:Name="PART_Track" Grid.Row="1">
								<Track.Thumb>
									<Thumb x:Name="Thumb" Style="{DynamicResource ThumbStyle1}"/>
								</Track.Thumb>
							</Track>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ThumbStyle1" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas>
						<Ellipse  Fill="Blue" Height="70" Width="74" VerticalAlignment="Center" HorizontalAlignment="Center"/>
						<Image Margin="4,12,0,0" Source="/Digiphoto.Lumen.UI;component/Resources/gallery-double-arrow-left-16x16.png" Width="16" />
						<Image Margin="21,0,0,0" Source="/Digiphoto.Lumen.UI;component/Resources/gallery-slider-move-32x32.png" Width="32" />
						<Image Margin="53,12,0,0" Source="/Digiphoto.Lumen.UI;component/Resources/gallery-double-arrow-right-16x16.png" Width="16" />
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
-->

	<RoutedUICommand x:Key="cmdTakeSnapshotPubblico1" />
	<RoutedUICommand x:Key="cmdCloseSnapshotPubblico" />
	<RoutedUICommand x:Key="uicmdSelezionaTutteLeFoto" />
	<RoutedUICommand x:Key="uicmdDeselezionaTutteLeFoto" />
	<RoutedUICommand x:Key="cmdGoToCurrentFotoSS" />

</ResourceDictionary> 